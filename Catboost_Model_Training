{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":116092,"databundleVersionId":13860829,"sourceType":"competition"},{"sourceId":13424641,"sourceType":"datasetVersion","datasetId":8520630}],"dockerImageVersionId":31153,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# ===============================================================\n# üß† CATBOOST MODEL ‚Äî ING Hubs T√ºrkiye Datathon\n# ===============================================================\n\nimport pandas as pd\nimport numpy as np\nfrom catboost import CatBoostClassifier, Pool\nfrom sklearn.metrics import roc_auc_score, log_loss\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:45:16.144893Z","iopub.execute_input":"2025-10-19T06:45:16.145215Z","iopub.status.idle":"2025-10-19T06:45:16.150169Z","shell.execute_reply.started":"2025-10-19T06:45:16.145194Z","shell.execute_reply":"2025-10-19T06:45:16.149106Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"# ===============================================================\n# üì¶ Load Engineered Features\n# ===============================================================\ntrain = pd.read_csv(\"/kaggle/input/feature-engineered-csvs/train_features(1).csv\")\ntest  = pd.read_csv(\"/kaggle/input/feature-engineered-csvs/test_features(1).csv\")\n\nprint(\"‚úÖ Data loaded successfully!\")\nprint(f\"Train shape: {train.shape}\")\nprint(f\"Test shape:  {test.shape}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:45:17.340115Z","iopub.execute_input":"2025-10-19T06:45:17.340441Z","iopub.status.idle":"2025-10-19T06:45:19.499095Z","shell.execute_reply.started":"2025-10-19T06:45:17.340420Z","shell.execute_reply":"2025-10-19T06:45:19.498237Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Data loaded successfully!\nTrain shape: (133287, 87)\nTest shape:  (43006, 86)\n","output_type":"stream"}],"execution_count":21},{"cell_type":"code","source":"# ===============================================================\n# ‚è≥ Time-based Split (Leak-Free)\n# ===============================================================\ntrain[\"ref_date\"] = pd.to_datetime(train[\"ref_date\"])\ncutoff = \"2018-11-01\"\n\ntrain_part = train[train[\"ref_date\"] < cutoff]\nvalid_part = train[train[\"ref_date\"] >= cutoff]\n\nX_train = train_part.drop(columns=[\"cust_id\", \"ref_date\", \"churn\"])\ny_train = train_part[\"churn\"]\nX_valid = valid_part.drop(columns=[\"cust_id\", \"ref_date\", \"churn\"])\ny_valid = valid_part[\"churn\"]\n\nprint(f\"\\nüìÖ Train size: {X_train.shape}, Valid size: {X_valid.shape}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:45:23.519469Z","iopub.execute_input":"2025-10-19T06:45:23.519774Z","iopub.status.idle":"2025-10-19T06:45:23.609362Z","shell.execute_reply.started":"2025-10-19T06:45:23.519752Z","shell.execute_reply":"2025-10-19T06:45:23.608674Z"}},"outputs":[{"name":"stdout","text":"\nüìÖ Train size: (118422, 84), Valid size: (14865, 84)\n","output_type":"stream"}],"execution_count":22},{"cell_type":"code","source":"# ===============================================================\n# üî¢ Identify Categorical Columns\n# ===============================================================\ncat_cols = [\"gender\", \"province\", \"religion\", \"work_type\", \"work_sector\", \"season\"]\ncat_cols = [c for c in cat_cols if c in X_train.columns]\nprint(f\"üß© Using {len(cat_cols)} categorical features: {cat_cols}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:45:26.902398Z","iopub.execute_input":"2025-10-19T06:45:26.902694Z","iopub.status.idle":"2025-10-19T06:45:26.908445Z","shell.execute_reply.started":"2025-10-19T06:45:26.902673Z","shell.execute_reply":"2025-10-19T06:45:26.907488Z"}},"outputs":[{"name":"stdout","text":"üß© Using 6 categorical features: ['gender', 'province', 'religion', 'work_type', 'work_sector', 'season']\n","output_type":"stream"}],"execution_count":23},{"cell_type":"code","source":"# ===============================================================\n# üïì CatBoost Grid Search with Time-Based Cross-Validation\n# ===============================================================\nfrom catboost import CatBoostClassifier, Pool\nfrom itertools import product\nfrom sklearn.metrics import roc_auc_score, log_loss\nimport numpy as np\nimport pandas as pd\n\n# ---------------------------------------------------------------\n# Build rolling, leak-free time folds\n# ---------------------------------------------------------------\ndef build_time_folds(df, date_col=\"ref_date\", n_splits=4, val_months=1, gap_months=1, min_train_blocks=3):\n    months = pd.to_datetime(df[date_col]).dt.to_period(\"M\")\n    uniq = months.sort_values().unique()\n    folds = []\n    for val_end_pos in range(min_train_blocks + gap_months + val_months, len(uniq) + 1):\n        val_start_pos = val_end_pos - val_months\n        gap_start_pos = val_start_pos - gap_months\n        train_end_pos = gap_start_pos\n        if train_end_pos < min_train_blocks:\n            continue\n        folds.append((uniq[:train_end_pos], uniq[val_start_pos:val_end_pos]))\n    folds = folds[-n_splits:]\n    idx_pairs = []\n    for train_months, valid_months in folds:\n        tr_idx = months[months.isin(train_months)].index.values\n        va_idx = months[months.isin(valid_months)].index.values\n        idx_pairs.append((tr_idx, va_idx))\n    print(f\"‚úÖ Built {len(idx_pairs)} time folds\")\n    return idx_pairs\n\nfolds = build_time_folds(train, date_col=\"ref_date\", n_splits=4, val_months=1, gap_months=1)\n\n# ---------------------------------------------------------------\n# Parameter grid\n# ---------------------------------------------------------------\nparam_grid = {\n    \"depth\": [6, 8, 10],\n    \"learning_rate\": [0.03, 0.05, 0.07],\n    \"l2_leaf_reg\": [3, 5, 7]\n}\nparam_combos = list(product(param_grid[\"depth\"], param_grid[\"learning_rate\"], param_grid[\"l2_leaf_reg\"]))\nprint(f\"\\nüîç Evaluating {len(param_combos)} parameter combinations over {len(folds)} folds...\\n\")\n\n# ---------------------------------------------------------------\n# Utility functions\n# ---------------------------------------------------------------\ndef compute_scale_pos_weight(y):\n    neg, pos = np.bincount(y.astype(int))\n    return max(1.0, neg / max(1, pos))\n\nresults = []\nbest_auc, best_params = -1, None\n\nfor depth, lr, l2 in param_combos:\n    fold_aucs, fold_loglosses = [], []\n\n    for fold_i, (tr_idx, va_idx) in enumerate(folds, 1):\n        X_tr, y_tr = train.iloc[tr_idx].drop(columns=[\"cust_id\", \"ref_date\", \"churn\"]), train.iloc[tr_idx][\"churn\"]\n        X_va, y_va = train.iloc[va_idx].drop(columns=[\"cust_id\", \"ref_date\", \"churn\"]), train.iloc[va_idx][\"churn\"]\n\n        spw = compute_scale_pos_weight(y_tr)\n        train_pool = Pool(X_tr, y_tr, cat_features=cat_cols)\n        valid_pool = Pool(X_va, y_va, cat_features=cat_cols)\n\n        model = CatBoostClassifier(\n            iterations=2000,\n            depth=depth,\n            learning_rate=lr,\n            l2_leaf_reg=l2,\n            random_seed=42,\n            loss_function=\"Logloss\",\n            eval_metric=\"AUC\",\n            class_weights=[1.0, spw],\n            od_type=\"Iter\",\n            od_wait=200,\n            task_type=\"CPU\",\n            verbose=False\n        )\n\n        model.fit(train_pool, eval_set=valid_pool, use_best_model=True, verbose=False)\n        preds = model.predict_proba(X_va)[:, 1]\n\n        fold_auc = roc_auc_score(y_va, preds)\n        fold_logloss = log_loss(y_va, preds)\n        fold_aucs.append(fold_auc)\n        fold_loglosses.append(fold_logloss)\n\n        print(f\"  Fold {fold_i}: AUC={fold_auc:.5f}  LogLoss={fold_logloss:.5f}\")\n\n    mean_auc, mean_logloss = np.mean(fold_aucs), np.mean(fold_loglosses)\n    results.append((depth, lr, l2, mean_auc, mean_logloss))\n    print(f\"‚û°Ô∏è depth={depth:<2} lr={lr:<4} l2={l2:<3} ‚Üí mean AUC={mean_auc:.5f}, mean LogLoss={mean_logloss:.5f}\\n\")\n\n    if mean_auc > best_auc:\n        best_auc, best_params = mean_auc, (depth, lr, l2)\n\n# ---------------------------------------------------------------\n# Summary\n# ---------------------------------------------------------------\nprint(\"\\nüèÅ Best parameters (based on mean AUC):\")\nprint(f\"depth={best_params[0]}, learning_rate={best_params[1]}, l2_leaf_reg={best_params[2]}\")\nprint(f\"‚úÖ Best Mean AUC: {best_auc:.5f}\")\n\n# Save all runs for reference\ngrid_df = pd.DataFrame(results, columns=[\"depth\", \"learning_rate\", \"l2_leaf_reg\", \"AUC\", \"LogLoss\"])\ngrid_df.to_csv(\"catboost_timecv_results.csv\", index=False)\nprint(\"üíæ Saved catboost_timecv_results.csv (full tuning log)\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:45:42.271596Z","iopub.execute_input":"2025-10-19T06:45:42.271917Z","iopub.status.idle":"2025-10-19T09:06:02.234298Z","shell.execute_reply.started":"2025-10-19T06:45:42.271894Z","shell.execute_reply":"2025-10-19T09:06:02.233186Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Built 4 time folds\n\nüîç Evaluating 27 parameter combinations over 4 folds...\n\n  Fold 1: AUC=0.71057  LogLoss=0.65502\n  Fold 2: AUC=0.70227  LogLoss=0.65398\n  Fold 3: AUC=0.71210  LogLoss=0.55173\n  Fold 4: AUC=0.71006  LogLoss=0.58497\n‚û°Ô∏è depth=6  lr=0.03 l2=3   ‚Üí mean AUC=0.70875, mean LogLoss=0.61142\n\n  Fold 1: AUC=0.71041  LogLoss=0.64873\n  Fold 2: AUC=0.70161  LogLoss=0.64933\n  Fold 3: AUC=0.71232  LogLoss=0.56606\n  Fold 4: AUC=0.70965  LogLoss=0.58994\n‚û°Ô∏è depth=6  lr=0.03 l2=5   ‚Üí mean AUC=0.70850, mean LogLoss=0.61352\n\n  Fold 1: AUC=0.71072  LogLoss=0.64997\n  Fold 2: AUC=0.70231  LogLoss=0.66157\n  Fold 3: AUC=0.71140  LogLoss=0.55816\n  Fold 4: AUC=0.70951  LogLoss=0.57154\n‚û°Ô∏è depth=6  lr=0.03 l2=7   ‚Üí mean AUC=0.70849, mean LogLoss=0.61031\n\n  Fold 1: AUC=0.71313  LogLoss=0.63529\n  Fold 2: AUC=0.70322  LogLoss=0.65331\n  Fold 3: AUC=0.71360  LogLoss=0.55554\n  Fold 4: AUC=0.70597  LogLoss=0.60241\n‚û°Ô∏è depth=6  lr=0.05 l2=3   ‚Üí mean AUC=0.70898, mean LogLoss=0.61164\n\n  Fold 1: AUC=0.71070  LogLoss=0.62439\n  Fold 2: AUC=0.70118  LogLoss=0.66387\n  Fold 3: AUC=0.71073  LogLoss=0.54378\n  Fold 4: AUC=0.70879  LogLoss=0.58277\n‚û°Ô∏è depth=6  lr=0.05 l2=5   ‚Üí mean AUC=0.70785, mean LogLoss=0.60370\n\n  Fold 1: AUC=0.71189  LogLoss=0.64286\n  Fold 2: AUC=0.70274  LogLoss=0.65692\n  Fold 3: AUC=0.71117  LogLoss=0.57768\n  Fold 4: AUC=0.71063  LogLoss=0.59582\n‚û°Ô∏è depth=6  lr=0.05 l2=7   ‚Üí mean AUC=0.70911, mean LogLoss=0.61832\n\n  Fold 1: AUC=0.71067  LogLoss=0.64529\n  Fold 2: AUC=0.70090  LogLoss=0.65906\n  Fold 3: AUC=0.71136  LogLoss=0.54645\n  Fold 4: AUC=0.70506  LogLoss=0.60367\n‚û°Ô∏è depth=6  lr=0.07 l2=3   ‚Üí mean AUC=0.70700, mean LogLoss=0.61362\n\n  Fold 1: AUC=0.71050  LogLoss=0.66081\n  Fold 2: AUC=0.70228  LogLoss=0.65381\n  Fold 3: AUC=0.71288  LogLoss=0.54998\n  Fold 4: AUC=0.70758  LogLoss=0.58681\n‚û°Ô∏è depth=6  lr=0.07 l2=5   ‚Üí mean AUC=0.70831, mean LogLoss=0.61285\n\n  Fold 1: AUC=0.71033  LogLoss=0.66320\n  Fold 2: AUC=0.70164  LogLoss=0.65102\n  Fold 3: AUC=0.71321  LogLoss=0.56198\n  Fold 4: AUC=0.70898  LogLoss=0.58778\n‚û°Ô∏è depth=6  lr=0.07 l2=7   ‚Üí mean AUC=0.70854, mean LogLoss=0.61599\n\n  Fold 1: AUC=0.71336  LogLoss=0.64275\n  Fold 2: AUC=0.70361  LogLoss=0.64466\n  Fold 3: AUC=0.71456  LogLoss=0.54196\n  Fold 4: AUC=0.70870  LogLoss=0.56587\n‚û°Ô∏è depth=8  lr=0.03 l2=3   ‚Üí mean AUC=0.71006, mean LogLoss=0.59881\n\n  Fold 1: AUC=0.71080  LogLoss=0.65372\n  Fold 2: AUC=0.70352  LogLoss=0.64980\n  Fold 3: AUC=0.71226  LogLoss=0.55018\n  Fold 4: AUC=0.70713  LogLoss=0.60736\n‚û°Ô∏è depth=8  lr=0.03 l2=5   ‚Üí mean AUC=0.70843, mean LogLoss=0.61527\n\n  Fold 1: AUC=0.71105  LogLoss=0.63287\n  Fold 2: AUC=0.70314  LogLoss=0.64787\n  Fold 3: AUC=0.71244  LogLoss=0.58756\n  Fold 4: AUC=0.70808  LogLoss=0.59097\n‚û°Ô∏è depth=8  lr=0.03 l2=7   ‚Üí mean AUC=0.70868, mean LogLoss=0.61482\n\n  Fold 1: AUC=0.71077  LogLoss=0.63628\n  Fold 2: AUC=0.70101  LogLoss=0.64829\n  Fold 3: AUC=0.71055  LogLoss=0.57242\n  Fold 4: AUC=0.70917  LogLoss=0.60140\n‚û°Ô∏è depth=8  lr=0.05 l2=3   ‚Üí mean AUC=0.70787, mean LogLoss=0.61460\n\n  Fold 1: AUC=0.71086  LogLoss=0.62297\n  Fold 2: AUC=0.70347  LogLoss=0.64917\n  Fold 3: AUC=0.71013  LogLoss=0.56682\n  Fold 4: AUC=0.70655  LogLoss=0.60477\n‚û°Ô∏è depth=8  lr=0.05 l2=5   ‚Üí mean AUC=0.70775, mean LogLoss=0.61093\n\n  Fold 1: AUC=0.71167  LogLoss=0.62730\n  Fold 2: AUC=0.70243  LogLoss=0.65581\n  Fold 3: AUC=0.70972  LogLoss=0.55546\n  Fold 4: AUC=0.70902  LogLoss=0.60008\n‚û°Ô∏è depth=8  lr=0.05 l2=7   ‚Üí mean AUC=0.70821, mean LogLoss=0.60966\n\n  Fold 1: AUC=0.70898  LogLoss=0.64682\n  Fold 2: AUC=0.70079  LogLoss=0.65472\n  Fold 3: AUC=0.71003  LogLoss=0.59615\n  Fold 4: AUC=0.70609  LogLoss=0.61225\n‚û°Ô∏è depth=8  lr=0.07 l2=3   ‚Üí mean AUC=0.70647, mean LogLoss=0.62748\n\n  Fold 1: AUC=0.71121  LogLoss=0.63280\n  Fold 2: AUC=0.70145  LogLoss=0.65188\n  Fold 3: AUC=0.71131  LogLoss=0.58795\n  Fold 4: AUC=0.70571  LogLoss=0.63106\n‚û°Ô∏è depth=8  lr=0.07 l2=5   ‚Üí mean AUC=0.70742, mean LogLoss=0.62592\n\n  Fold 1: AUC=0.71068  LogLoss=0.65389\n  Fold 2: AUC=0.70042  LogLoss=0.66133\n  Fold 3: AUC=0.70856  LogLoss=0.66755\n  Fold 4: AUC=0.70767  LogLoss=0.58851\n‚û°Ô∏è depth=8  lr=0.07 l2=7   ‚Üí mean AUC=0.70683, mean LogLoss=0.64282\n\n  Fold 1: AUC=0.71029  LogLoss=0.61183\n  Fold 2: AUC=0.70291  LogLoss=0.64122\n  Fold 3: AUC=0.71033  LogLoss=0.65657\n  Fold 4: AUC=0.70493  LogLoss=0.61915\n‚û°Ô∏è depth=10 lr=0.03 l2=3   ‚Üí mean AUC=0.70711, mean LogLoss=0.63219\n\n  Fold 1: AUC=0.70960  LogLoss=0.64113\n  Fold 2: AUC=0.70283  LogLoss=0.63719\n  Fold 3: AUC=0.71289  LogLoss=0.57672\n  Fold 4: AUC=0.71037  LogLoss=0.56835\n‚û°Ô∏è depth=10 lr=0.03 l2=5   ‚Üí mean AUC=0.70892, mean LogLoss=0.60585\n\n  Fold 1: AUC=0.70926  LogLoss=0.64034\n  Fold 2: AUC=0.70156  LogLoss=0.65135\n  Fold 3: AUC=0.71111  LogLoss=0.58295\n  Fold 4: AUC=0.71000  LogLoss=0.58592\n‚û°Ô∏è depth=10 lr=0.03 l2=7   ‚Üí mean AUC=0.70798, mean LogLoss=0.61514\n\n  Fold 1: AUC=0.70870  LogLoss=0.65968\n  Fold 2: AUC=0.70386  LogLoss=0.63447\n  Fold 3: AUC=0.71039  LogLoss=0.64978\n  Fold 4: AUC=0.70791  LogLoss=0.54120\n‚û°Ô∏è depth=10 lr=0.05 l2=3   ‚Üí mean AUC=0.70772, mean LogLoss=0.62128\n\n  Fold 1: AUC=0.70987  LogLoss=0.63936\n  Fold 2: AUC=0.70459  LogLoss=0.63492\n  Fold 3: AUC=0.71043  LogLoss=0.60407\n  Fold 4: AUC=0.70890  LogLoss=0.61103\n‚û°Ô∏è depth=10 lr=0.05 l2=5   ‚Üí mean AUC=0.70845, mean LogLoss=0.62234\n\n  Fold 1: AUC=0.70938  LogLoss=0.62418\n  Fold 2: AUC=0.70184  LogLoss=0.65020\n  Fold 3: AUC=0.71189  LogLoss=0.63340\n  Fold 4: AUC=0.70707  LogLoss=0.63879\n‚û°Ô∏è depth=10 lr=0.05 l2=7   ‚Üí mean AUC=0.70755, mean LogLoss=0.63664\n\n  Fold 1: AUC=0.70645  LogLoss=0.66361\n  Fold 2: AUC=0.70425  LogLoss=0.63160\n  Fold 3: AUC=0.70889  LogLoss=0.59891\n  Fold 4: AUC=0.70481  LogLoss=0.65456\n‚û°Ô∏è depth=10 lr=0.07 l2=3   ‚Üí mean AUC=0.70610, mean LogLoss=0.63717\n\n  Fold 1: AUC=0.70574  LogLoss=0.65354\n  Fold 2: AUC=0.70051  LogLoss=0.65395\n  Fold 3: AUC=0.71018  LogLoss=0.61935\n  Fold 4: AUC=0.70731  LogLoss=0.58450\n‚û°Ô∏è depth=10 lr=0.07 l2=5   ‚Üí mean AUC=0.70593, mean LogLoss=0.62783\n\n  Fold 1: AUC=0.70873  LogLoss=0.62541\n  Fold 2: AUC=0.70387  LogLoss=0.65460\n  Fold 3: AUC=0.71124  LogLoss=0.58909\n  Fold 4: AUC=0.70574  LogLoss=0.62034\n‚û°Ô∏è depth=10 lr=0.07 l2=7   ‚Üí mean AUC=0.70739, mean LogLoss=0.62236\n\n\nüèÅ Best parameters (based on mean AUC):\ndepth=8, learning_rate=0.03, l2_leaf_reg=3\n‚úÖ Best Mean AUC: 0.71006\nüíæ Saved catboost_timecv_results.csv (full tuning log)\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"# ===============================================================\n# üìä CatBoost Grid Search Visualization ‚Äî AUC & LogLoss\n# ===============================================================\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Load saved results\ngrid_df = pd.read_csv(\"catboost_timecv_results.csv\")\n\nprint(f\"‚úÖ Loaded {grid_df.shape[0]} tuning results.\")\ndisplay(grid_df.head())\n\n# ---------------------------------------------------------------\n# AUC Heatmap (depth vs learning_rate for fixed l2_leaf_reg)\n# ---------------------------------------------------------------\nplt.figure(figsize=(14, 5))\nfor i, l2 in enumerate(sorted(grid_df[\"l2_leaf_reg\"].unique()), 1):\n    pivot_auc = grid_df[grid_df[\"l2_leaf_reg\"] == l2].pivot(\n        \"depth\", \"learning_rate\", \"AUC\"\n    )\n    plt.subplot(1, len(sorted(grid_df[\"l2_leaf_reg\"].unique())), i)\n    sns.heatmap(pivot_auc, annot=True, fmt=\".4f\", cmap=\"YlGnBu\")\n    plt.title(f\"AUC Heatmap (l2_leaf_reg={l2})\")\n    plt.xlabel(\"learning_rate\")\n    plt.ylabel(\"depth\")\n\nplt.tight_layout()\nplt.show()\n\n# ---------------------------------------------------------------\n# LogLoss Heatmap\n# ---------------------------------------------------------------\nplt.figure(figsize=(14, 5))\nfor i, l2 in enumerate(sorted(grid_df[\"l2_leaf_reg\"].unique()), 1):\n    pivot_log = grid_df[grid_df[\"l2_leaf_reg\"] == l2].pivot(\n        \"depth\", \"learning_rate\", \"LogLoss\"\n    )\n    plt.subplot(1, len(sorted(grid_df[\"l2_leaf_reg\"].unique())), i)\n    sns.heatmap(pivot_log, annot=True, fmt=\".4f\", cmap=\"Reds_r\")\n    plt.title(f\"LogLoss Heatmap (l2_leaf_reg={l2})\")\n    plt.xlabel(\"learning_rate\")\n    plt.ylabel(\"depth\")\n\nplt.tight_layout()\nplt.show()\n\n# ---------------------------------------------------------------\n# Optional: 3D Scatter Plot (AUC vs Parameters)\n# ---------------------------------------------------------------\nfig = plt.figure(figsize=(8,6))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(\n    grid_df[\"depth\"],\n    grid_df[\"learning_rate\"],\n    grid_df[\"AUC\"],\n    c=grid_df[\"AUC\"], cmap=\"viridis\", s=70\n)\nax.set_xlabel(\"Depth\")\nax.set_ylabel(\"Learning Rate\")\nax.set_zlabel(\"AUC\")\nax.set_title(\"3D Visualization of AUC across Parameters\")\nplt.tight_layout()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T09:06:20.030543Z","iopub.execute_input":"2025-10-19T09:06:20.030832Z","iopub.status.idle":"2025-10-19T09:06:20.361331Z","shell.execute_reply.started":"2025-10-19T09:06:20.030813Z","shell.execute_reply":"2025-10-19T09:06:20.360135Z"}},"outputs":[{"name":"stdout","text":"‚úÖ Loaded 27 tuning results.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"   depth  learning_rate  l2_leaf_reg       AUC   LogLoss\n0      6           0.03            3  0.708751  0.611423\n1      6           0.03            5  0.708497  0.613516\n2      6           0.03            7  0.708486  0.610313\n3      6           0.05            3  0.708980  0.611636\n4      6           0.05            5  0.707852  0.603704","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>depth</th>\n      <th>learning_rate</th>\n      <th>l2_leaf_reg</th>\n      <th>AUC</th>\n      <th>LogLoss</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>0.03</td>\n      <td>3</td>\n      <td>0.708751</td>\n      <td>0.611423</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6</td>\n      <td>0.03</td>\n      <td>5</td>\n      <td>0.708497</td>\n      <td>0.613516</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6</td>\n      <td>0.03</td>\n      <td>7</td>\n      <td>0.708486</td>\n      <td>0.610313</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>0.05</td>\n      <td>3</td>\n      <td>0.708980</td>\n      <td>0.611636</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>0.05</td>\n      <td>5</td>\n      <td>0.707852</td>\n      <td>0.603704</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_37/188358881.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m14\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ml2\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrid_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"l2_leaf_reg\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m     pivot_auc = grid_df[grid_df[\"l2_leaf_reg\"] == l2].pivot(\n\u001b[0m\u001b[1;32m     21\u001b[0m         \u001b[0;34m\"depth\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"learning_rate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"AUC\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     )\n","\u001b[0;31mTypeError\u001b[0m: DataFrame.pivot() takes 1 positional argument but 4 were given"],"ename":"TypeError","evalue":"DataFrame.pivot() takes 1 positional argument but 4 were given","output_type":"error"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1400x500 with 0 Axes>"},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"# ===============================================================\n# ‚öñÔ∏è Handle Class Imbalance Automatically\n# ===============================================================\nneg, pos = np.bincount(y_train)\nscale_pos_weight = neg / pos\nprint(f\"Pos/Neg ratio: {pos}/{neg} ‚Üí class_weight={scale_pos_weight:.2f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:30:11.099104Z","iopub.execute_input":"2025-10-19T06:30:11.099431Z","iopub.status.idle":"2025-10-19T06:30:11.106300Z","shell.execute_reply.started":"2025-10-19T06:30:11.099407Z","shell.execute_reply":"2025-10-19T06:30:11.105150Z"}},"outputs":[{"name":"stdout","text":"Pos/Neg ratio: 16906/101516 ‚Üí class_weight=6.00\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"# ===============================================================\n# üß† Train CatBoost Model (Fixed)\n# ===============================================================\ntrain_pool = Pool(X_train, y_train, cat_features=cat_cols)\nvalid_pool = Pool(X_valid, y_valid, cat_features=cat_cols)\n\nmodel = CatBoostClassifier(\n    iterations=3000,\n    learning_rate=0.05,\n    depth=8,\n    l2_leaf_reg=5,\n    random_seed=42,\n    loss_function=\"Logloss\",\n    eval_metric=\"AUC\",\n    class_weights=[1.0, scale_pos_weight],\n    od_type=\"Iter\",\n    od_wait=200,           # ‚Üê keep this only\n    task_type=\"CPU\",\n    verbose=False          # quiet output\n)\n\nprint(\"\\nüöÄ Training CatBoost (please wait)...\")\nmodel.fit(train_pool, eval_set=valid_pool, use_best_model=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:31:19.033117Z","iopub.execute_input":"2025-10-19T06:31:19.033454Z","iopub.status.idle":"2025-10-19T06:32:19.652080Z","shell.execute_reply.started":"2025-10-19T06:31:19.033431Z","shell.execute_reply":"2025-10-19T06:32:19.650918Z"}},"outputs":[{"name":"stdout","text":"\nüöÄ Training CatBoost (please wait)...\n","output_type":"stream"},{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"<catboost.core.CatBoostClassifier at 0x78b0bf979f10>"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"# ===============================================================\n# üìä Evaluate Validation Performance\n# ===============================================================\nval_preds = model.predict_proba(X_valid)[:, 1]\nval_auc = roc_auc_score(y_valid, val_preds)\nval_logloss = log_loss(y_valid, val_preds)\n\nprint(f\"\\n‚úÖ Validation AUC: {val_auc:.5f} (Higher = Better)\")\nprint(f\"‚úÖ Validation LogLoss: {val_logloss:.5f} (Lower = Better)\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:32:27.316895Z","iopub.execute_input":"2025-10-19T06:32:27.317200Z","iopub.status.idle":"2025-10-19T06:32:27.386129Z","shell.execute_reply.started":"2025-10-19T06:32:27.317179Z","shell.execute_reply":"2025-10-19T06:32:27.385075Z"}},"outputs":[{"name":"stdout","text":"\n‚úÖ Validation AUC: 0.70819 (Higher = Better)\n‚úÖ Validation LogLoss: 0.60724 (Lower = Better)\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"# ===============================================================\n# üìà Plot Feature Importances\n# ===============================================================\nimp = model.get_feature_importance(prettified=True)\nimp_top = imp.sort_values(by=\"Importances\", ascending=False).head(25)\n\nplt.figure(figsize=(8,6))\nplt.barh(imp_top[\"Feature Id\"][::-1], imp_top[\"Importances\"][::-1])\nplt.title(\"Top 25 Feature Importances ‚Äî CatBoost\")\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:32:32.243102Z","iopub.execute_input":"2025-10-19T06:32:32.243467Z","iopub.status.idle":"2025-10-19T06:32:32.857203Z","shell.execute_reply.started":"2025-10-19T06:32:32.243442Z","shell.execute_reply":"2025-10-19T06:32:32.856044Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"# ===============================================================\n# üíæ Predict Test Set & Save Submission\n# ===============================================================\ntest_preds = model.predict_proba(test.drop(columns=[\"cust_id\", \"ref_date\"]))[:, 1]\nsubmission = pd.DataFrame({\n    \"cust_id\": test[\"cust_id\"],\n    \"churn\": test_preds\n})\n\nsubmission.to_csv(\"submission.csv\", index=False)\nprint(\"\\nüíæ submission.csv saved successfully!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:32:40.397124Z","iopub.execute_input":"2025-10-19T06:32:40.397470Z","iopub.status.idle":"2025-10-19T06:32:40.609095Z","shell.execute_reply.started":"2025-10-19T06:32:40.397446Z","shell.execute_reply":"2025-10-19T06:32:40.608063Z"}},"outputs":[{"name":"stdout","text":"\nüíæ submission.csv saved successfully!\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"\n# ===============================================================\n# üìä Local Score Estimation (to avoid unnecessary submissions)\n# ===============================================================\nprint(\"\\nüìä Local Validation Summary:\")\nprint(f\"Validation AUC: {val_auc:.5f}  ‚Üë Higher is better\")\nprint(f\"Validation LogLoss: {val_logloss:.5f}  ‚Üì Lower is better\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-19T06:32:44.176712Z","iopub.execute_input":"2025-10-19T06:32:44.177087Z","iopub.status.idle":"2025-10-19T06:32:44.183071Z","shell.execute_reply.started":"2025-10-19T06:32:44.177062Z","shell.execute_reply":"2025-10-19T06:32:44.181781Z"}},"outputs":[{"name":"stdout","text":"\nüìä Local Validation Summary:\nValidation AUC: 0.70819  ‚Üë Higher is better\nValidation LogLoss: 0.60724  ‚Üì Lower is better\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}